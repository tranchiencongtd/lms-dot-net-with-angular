// <auto-generated />
using System;
using System.Collections.Generic;
using HDNXUdemyData.EntitiesContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HDNXUdemyData.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20240323044318_AddNewTableForCouponPromotionCode")]
    partial class AddNewTableForCouponPromotionCode
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("sche_dev_HDNXUdemy")
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "hstore");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DNXUdemyData.Entities.ContentCourseDetailEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<string>("FileNameVideo")
                        .HasColumnType("text");

                    b.Property<long>("IdContent")
                        .HasColumnType("bigint");

                    b.Property<string>("IdVideoUpload")
                        .HasColumnType("text");

                    b.Property<bool>("IsFinishConvert")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLearningFree")
                        .HasColumnType("boolean");

                    b.Property<string>("NameSubContent")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<string>("TimeOfContent")
                        .HasColumnType("text");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("ContentCourseDetails", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.BannerEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ContentBanner")
                        .HasColumnType("text");

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LinkAd")
                        .HasColumnType("text");

                    b.Property<string>("PublicId")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.Property<string>("UrlPicture")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Banners", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.BookmarkCourseEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<long>("IdCourse")
                        .HasColumnType("bigint");

                    b.Property<long>("IdStudent")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("BookmarkCourses", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.CategoryEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("text");

                    b.Property<string>("PublicId")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Categories", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.ContentCourseEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<long>("IdCourse")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("ContentCourses", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.CouponEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("AmountOff")
                        .HasColumnType("numeric");

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<string>("Duration")
                        .HasColumnType("text");

                    b.Property<int?>("DurationInMonths")
                        .HasColumnType("integer");

                    b.Property<bool?>("Livemode")
                        .HasColumnType("boolean");

                    b.Property<int?>("MaxRedemptions")
                        .HasColumnType("integer");

                    b.Property<string>("Metadata")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Object")
                        .HasColumnType("text");

                    b.Property<decimal?>("PercentOff")
                        .HasColumnType("numeric");

                    b.Property<int?>("RedeemBy")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<string>("StripeCouponId")
                        .HasColumnType("text");

                    b.Property<decimal?>("TimesRedeemed")
                        .HasColumnType("numeric");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.Property<bool?>("Valid")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Coupons", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.CourseEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Duration")
                        .HasColumnType("text");

                    b.Property<string>("FileUrl")
                        .HasColumnType("text");

                    b.Property<int>("IdAuthor")
                        .HasColumnType("integer");

                    b.Property<long>("IdCategory")
                        .HasColumnType("bigint");

                    b.Property<string>("Introduce")
                        .HasColumnType("text");

                    b.Property<bool>("IsDiscount")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFree")
                        .HasColumnType("boolean");

                    b.Property<string>("KeyVideoUpload")
                        .HasColumnType("text");

                    b.Property<int>("Languages")
                        .HasColumnType("integer");

                    b.Property<string>("LevelCourse")
                        .HasColumnType("text");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("text");

                    b.Property<int>("PriceOfCourse")
                        .HasColumnType("integer");

                    b.Property<int>("PriceOfDiscount")
                        .HasColumnType("integer");

                    b.Property<int?>("ProcessCourse")
                        .HasColumnType("integer");

                    b.Property<string>("PublicId")
                        .HasColumnType("text");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("TotalChapter")
                        .HasColumnType("integer");

                    b.Property<int>("TotalStudentRegister")
                        .HasColumnType("integer");

                    b.Property<int>("TypeOfCourse")
                        .HasColumnType("integer");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Courses", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.CourseEvaluationEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CommentEvaluation")
                        .HasColumnType("text");

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<int>("DisLike")
                        .HasColumnType("integer");

                    b.Property<long>("IdCourse")
                        .HasColumnType("bigint");

                    b.Property<long>("IdStudent")
                        .HasColumnType("bigint");

                    b.Property<int>("Like")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.Property<int>("VoteStartNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CourseEvaluations", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.DetailTheadQuestionCourseEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<int>("DisLike")
                        .HasColumnType("integer");

                    b.Property<long>("IdStudent")
                        .HasColumnType("bigint");

                    b.Property<long>("IdTheadQuestionCourse")
                        .HasColumnType("bigint");

                    b.Property<int>("Like")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("DetailTheadQuestionCourses", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.FileManagerEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ActualNameFile")
                        .HasColumnType("text");

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<string>("ExtendFile")
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("FileSize")
                        .HasColumnType("text");

                    b.Property<string>("FileType")
                        .HasColumnType("text");

                    b.Property<string>("FileUrl")
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool>("IsFree")
                        .HasColumnType("boolean");

                    b.Property<string>("KeyOfFile")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("FileManagers", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.InformationManualBankingEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AccountName")
                        .HasColumnType("text");

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<string>("NameBanking")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("NumberBanking")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("InformationManualBankings", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.NotificationEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<long?>("IdComment")
                        .HasColumnType("bigint");

                    b.Property<long>("IdCourse")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdStudent")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("boolean");

                    b.Property<string>("ShortComment")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<int?>("TypeNotification")
                        .HasColumnType("integer");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Notifications", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.PartnerEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("text");

                    b.Property<string>("PublicId")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Partners", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.PromotionCodeEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<string>("Customer")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IdCoupon")
                        .HasColumnType("text");

                    b.Property<bool?>("Livemode")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("MaxRedemptions")
                        .HasColumnType("numeric");

                    b.Property<Dictionary<string, string>>("Metadata")
                        .HasColumnType("hstore");

                    b.Property<string>("Object")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<string>("StripePromotionCodeId")
                        .HasColumnType("text");

                    b.Property<long?>("TimesRedeemed")
                        .HasColumnType("bigint");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("PromotionCodes", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.PurcharseCourseDetailsEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<long>("IdCourse")
                        .HasColumnType("bigint");

                    b.Property<long>("IdPurchaseOrder")
                        .HasColumnType("bigint");

                    b.Property<long>("IdStudent")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PriceOfCourse")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceOfDiscount")
                        .HasColumnType("numeric");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("PurcharseCourseDetails", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.PurcharseCourseEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ContentTranferBanking")
                        .HasColumnType("text");

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("numeric");

                    b.Property<long>("IdStudent")
                        .HasColumnType("bigint");

                    b.Property<Guid>("PurcharseCode")
                        .HasColumnType("uuid");

                    b.Property<int>("PurcharseStatus")
                        .HasColumnType("integer");

                    b.Property<LocalDateTime?>("PurchaseDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("PurcharseCourses", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.StudentProcessEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<long>("IdCourse")
                        .HasColumnType("bigint");

                    b.Property<int>("LastContentOfContent")
                        .HasColumnType("integer");

                    b.Property<int>("NumberContentOfCourse")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("StudentProcess", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.StudentPromotionEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CodePromotion")
                        .HasColumnType("text");

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<long>("IdCourse")
                        .HasColumnType("bigint");

                    b.Property<long>("IdPromotion")
                        .HasColumnType("bigint");

                    b.Property<long>("IdStudent")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.Property<int>("ValuePromotion")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("StudentPromotions", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.SubCategoryEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<long>("IdCategory")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("SubCategories", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.SystemConfigEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<string>("KeyConfig")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SystemConfigs", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.TheadQuestionCourseEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<int>("DisLike")
                        .HasColumnType("integer");

                    b.Property<long>("IdCourse")
                        .HasColumnType("bigint");

                    b.Property<long>("IdStudent")
                        .HasColumnType("bigint");

                    b.Property<int>("Like")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("TheadQuestionCourses", "sche_dev_HDNXUdemy");
                });

            modelBuilder.Entity("HDNXUdemyData.Entities.UserEntities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("CreateBy");

                    b.Property<LocalDateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("General")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsRequestTeacher")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("text");

                    b.Property<string>("PublicId")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<int>("TypeLogin")
                        .HasColumnType("integer");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("UpdateBy");

                    b.Property<LocalDateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Users", "sche_dev_HDNXUdemy");
                });
#pragma warning restore 612, 618
        }
    }
}
